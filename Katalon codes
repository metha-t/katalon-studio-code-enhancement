
# alphanumeric incriment 

def str = "abc129zA99"

// Check if the last character is "z"
if (str[-1] == "z") {
  // Append "AA" to the string
  str += "A"
} 
else if (str[-1] == "9") {
  // Increment the number
  
  str = str + 1
}

else {
  // Increment the string
  str = str.next()
}

println str

# keyword login 

/**
* Logs in to the application using the specified username and password.
*
* @param username The username to use for login.
* @param password The password to use for login.
*/
def login(username, password) {
    // Enter the username
    WebUI.setText(findTestObject('login/username_field'), username)
    
    // Enter the password
    WebUI.setText(findTestObject('login/password_field'), password)
    
    // Click the login button
    WebUI.click(findTestObject('login/login_button'))
    
    // Wait for the login to complete
    WebUI.waitForPageLoad()
}


# test


# custom keyword in Katalon Studio that can be used to generate a random alphanumeric string:

Copy code
----------


/**
* Generates a random alphanumeric string.
*
* @param length The length of the string to generate.
* @return The generated string.
*/
def generateRandomString(length) {
    String chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'
    StringBuilder sb = new StringBuilder()
    Random random = new Random()
    for (int i = 0; i < length; i++) {
        char c = chars.charAt(random.nextInt(chars.length()))
        sb.append(c)
    }
    return sb.toString()
}



This keyword takes a single parameter, length, which represents the length of the string to generate. It generates the string by selecting random characters from a predefined list of alphanumeric characters and appending them to a StringBuilder object. The resulting string is then returned.

You can use this keyword in your test scripts by calling it and passing in the desired length of the generated string. For example:

Copy code
----------


String randomString = generateRandomString(10)


This would generate a random alphanumeric string of length 10.



